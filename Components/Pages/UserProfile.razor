@page "/UserProfile/{UserId:int}"
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@using CodelineStore.Data.Model
@using Microsoft.EntityFrameworkCore
@using MudBlazor

<MudContainer Class="mt-4">
    @if (UserDetails == null)
    {
        <MudText Typo="Typo.h6" Align="Align.Center">User not found.</MudText>
    }
    else
    {
        <MudCard Class="mx-auto" Style="max-width: 600px;">
            <MudCardContent>
                <MudText Typo="Typo.h5">User Details</MudText>
                <MudDivider Class="my-2" />
                <MudText Typo="Typo.body1"><b>User ID:</b> @UserDetails.UserId</MudText>
                <MudText Typo="Typo.body1"><b>Username:</b> @UserDetails.Username</MudText>
                <MudText Typo="Typo.body1"><b>Email:</b> @UserDetails.Email</MudText>
                <MudText Typo="Typo.body1"><b>Role:</b> @UserDetails.Role</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@EditUser" Class="mr-2">
                    Edit User
                </MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="ShowDeleteConfirmation">
                    Delete User
                </MudButton>
            </MudCardActions>
        </MudCard>
    }

    <!-- Delete Confirmation Dialog -->
    @if (ShowDeleteDialog)
    {
        <MudDialog @bind-IsOpen="ShowDeleteDialog" MaxWidth="MaxWidth.Small">
            <MudDialogTitle>Confirm Deletion</MudDialogTitle>
            <MudDialogContent>
                <MudText Typo="Typo.body1">
                    Are you sure you want to delete this user?
                </MudText>
            </MudDialogContent>
            <MudDialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="ConfirmDeleteUser">Delete</MudButton>
                <MudButton Variant="Variant.Outlined" OnClick="CancelDelete">Cancel</MudButton>
            </MudDialogActions>
        </MudDialog>
    }
</MudContainer>

@code {
    [Parameter] public int UserId { get; set; }
    private User UserDetails { get; set; }
    private bool ShowDeleteDialog = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            UserDetails = await DbContext.Users.FirstOrDefaultAsync(u => u.UserId == UserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user details: {ex.Message}");
        }
    }

    private void EditUser()
    {
        // Navigate to an Edit User page with the user ID
        Navigation.NavigateTo($"/EditUser/{UserId}");
    }

    private void ShowDeleteConfirmation()
    {
        // Open delete confirmation dialog
        ShowDeleteDialog = true;
    }

    private async Task ConfirmDeleteUser()
    {
        try
        {
            var user = await DbContext.Users.FindAsync(UserId);
            if (user != null)
            {
                DbContext.Users.Remove(user);
                await DbContext.SaveChangesAsync();
                Console.WriteLine($"User with ID {UserId} deleted successfully.");
                Navigation.NavigateTo("/ViewUsers"); // Redirect back to ViewUsers page
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting user: {ex.Message}");
        }
        finally
        {
            ShowDeleteDialog = false;
        }
    }

    private void CancelDelete()
    {
        // Close the delete confirmation dialog
        ShowDeleteDialog = false;
    }
}
