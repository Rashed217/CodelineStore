@using CodelineStore.Data.Model
@using Microsoft.EntityFrameworkCore

@inject ApplicationDbContext DbContext

<MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0">
    <MudNavMenu Class="mud-width-full">
        <MudText Typo="Typo.h5" Class="px-4">Customer Menu</MudText>
        <MudDivider Class="my-2" />

        <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>

        <!-- Brands (Sellers) Navigation Group -->
        <MudNavGroup Title="Brands" Icon="@Icons.Material.Filled.Shop2">
            @if (Brands?.Any() == true)
            {
                @foreach (var seller in Brands)
                {
                    <MudNavLink Href="@($"/Brand/{seller.SId}")" Icon="@Icons.Material.Filled.Shop">
                        @seller.User.Username
                    </MudNavLink>
                }
            }
            else
            {
                <MudText Typo="Typo.body2" Color="Color.Secondary">No brands available</MudText>
            }
        </MudNavGroup>

        <!-- Categories Navigation Group -->
        <MudNavGroup Title="Categories" Icon="@Icons.Material.Filled.Category">
            @if (Categories?.Any() == true)
            {
                @foreach (var category in Categories)
                {
                    <MudNavLink Href="@($"/Category/{category.CatId}")" Icon="@Icons.Material.Filled.Category">
                        @category.Name
                    </MudNavLink>
                }
            }
            else
            {
                <MudText Typo="Typo.body2" Color="Color.Secondary">No categories available</MudText>
            }
        </MudNavGroup>

        <!-- User Navigation Group -->
        <MudNavGroup Title="User" Icon="@Icons.Material.Filled.VerifiedUser" Expanded="true">
            <MudNavLink Href="/ViewOrders" Icon="@Icons.Material.Filled.ShoppingCart" IconColor="Color.Success">View Orders</MudNavLink>
            <MudNavLink Href="/UserProfile" Icon="@Icons.Material.Filled.People" IconColor="Color.Info">View Profile</MudNavLink>
        </MudNavGroup>

    </MudNavMenu>
</MudPaper>

@code {
    private List<Seller> Brands { get; set; } = new();
    private List<Category> Categories { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        // Fetching brands (sellers) and categories from the database
        Brands = await DbContext.Sellers
            .Include(s => s.User) // Include User data for the Seller
            .ToListAsync();

        Categories = await DbContext.Categories.ToListAsync();
    }
}